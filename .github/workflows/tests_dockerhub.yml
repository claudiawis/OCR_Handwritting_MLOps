name: CI Tests and Docker Build

on:
  push:
    branches:
      - "**" # Trigger on all branches
  pull_request:
    branches:
      - "**" # Trigger on all pull requests

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11" # Specify Python 3.11

      - name: Install DVC and dependencies
        run: |
          pip install dvc
          pip install -r requirements.txt  # Install other dependencies

      - name: Check DVC Remote Configuration
        run: |
          dvc remote list  # Check if DVC remote is configured correctly

      - name: Pull DVC data
        run: |
          dvc pull --force  # Force pull the data tracked by DVC

      - name: Check for Missing Files
        run: |
          echo "Checking for missing DVC files..."
          if [ ! -f data/processed/cleaned_data.csv ]; then
            echo "Warning: cleaned_data.csv is missing!"
          fi
          if [ ! -f data/raw/raw_data ]; then
            echo "Warning: raw_data is missing!"
          fi
          if [ ! -f data/processed/X_train.npy ]; then
            echo "Warning: X_train.npy is missing!"
          fi

      - name: Reproduce DVC Pipeline
        run: |
          dvc repro  # Reproduce the DVC pipeline to ensure all data is processed correctly

      - name: Run Tests
        run: |
          python -m unittest discover -s tests -p '*.py'  # Adjust this command based on your test framework

  docker:
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List all project filed
        run: |
          ls -lR
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Tag Data Ingestion Service
        run: |
          docker build -t claudiawis/ocr_handwritting_mlops:data_ingestion_service -f src/data/Dockerfile-ingestion .
          docker tag claudiawis/ocr_handwritting_mlops:data_ingestion_service claudiawis/ocr_handwritting_mlops:data_ingestion_service
          docker push claudiawis/ocr_handwritting_mlops:data_ingestion_service

      - name: Build and Tag Model Training Service
        run: |
          docker build -t claudiawis/ocr_handwritting_mlops:model_training_service -f src/models/Dockerfile-training .
          docker tag claudiawis/ocr_handwritting_mlops:model_training_service claudiawis/ocr_handwritting_mlops:model_training_service
          docker push claudiawis/ocr_handwritting_mlops:model_training_service

      - name: Build and Tag Prediction Service
        run: |
          docker build -t claudiawis/ocr_handwritting_mlops:prediction_service -f src/api/Dockerfile-prediction .
          docker tag claudiawis/ocr_handwritting_mlops:prediction_service claudiawis/ocr_handwritting_mlops:prediction_service
          docker push claudiawis/ocr_handwritting_mlops:prediction_service

      - name: Build and Tag Gateway Service
        run: |
          docker build -t claudiawis/ocr_handwritting_mlops:gateway_service -f src/api/Dockerfile-gateway .
          docker tag claudiawis/ocr_handwritting_mlops:gateway_service claudiawis/ocr_handwritting_mlops:gateway_service
          docker push claudiawis/ocr_handwritting_mlops:gateway_service

      - name: Build and Tag Tests Service
        run: |
          docker build -t claudiawis/ocr_handwritting_mlops:tests_service -f tests/Dockerfile-tests .
          docker tag claudiawis/ocr_handwritting_mlops:tests_service claudiawis/ocr_handwritting_mlops:tests_service
          docker push claudiawis/ocr_handwritting_mlops:tests_service
